// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketSystem.Data;

#nullable disable

namespace TicketSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TicketSystem.Models.Answer", b =>
                {
                    b.Property<int>("AnswerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("TicketID")
                        .HasColumnType("int");

                    b.HasKey("AnswerID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("TicketID");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("TicketSystem.Models.CasinoGame", b =>
                {
                    b.Property<int>("CasinoGameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Casino")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("CasinoGameID");

                    b.ToTable("CasinoGames");
                });

            modelBuilder.Entity("TicketSystem.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("JobPositionID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("EmployeeID");

                    b.HasIndex("JobPositionID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TicketSystem.Models.JobPosition", b =>
                {
                    b.Property<int>("JobPositionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("JobPositionID");

                    b.ToTable("JobPositions");
                });

            modelBuilder.Entity("TicketSystem.Models.Priority", b =>
                {
                    b.Property<int>("PriorityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("PriorityID");

                    b.ToTable("Priorities");
                });

            modelBuilder.Entity("TicketSystem.Models.Problem", b =>
                {
                    b.Property<int>("ProblemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CasinoGameID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("PriorityID")
                        .HasColumnType("int");

                    b.HasKey("ProblemID");

                    b.HasIndex("CasinoGameID");

                    b.HasIndex("PriorityID");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("TicketSystem.Models.RequestType", b =>
                {
                    b.Property<int>("RequestTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("RequestTypeID");

                    b.ToTable("RequestTypes");
                });

            modelBuilder.Entity("TicketSystem.Models.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("StatusID");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("TicketSystem.Models.Ticket", b =>
                {
                    b.Property<int>("TicketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CasinoGameID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("EngineerID")
                        .HasColumnType("int");

                    b.Property<int>("PriorityID")
                        .HasColumnType("int");

                    b.Property<int>("RequestTypeID")
                        .HasColumnType("int");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<int>("SupportTechID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("TicketID");

                    b.HasIndex("CasinoGameID");

                    b.HasIndex("EngineerID");

                    b.HasIndex("PriorityID");

                    b.HasIndex("RequestTypeID");

                    b.HasIndex("StatusID");

                    b.HasIndex("SupportTechID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TicketSystem.Models.Answer", b =>
                {
                    b.HasOne("TicketSystem.Models.Employee", "Employee")
                        .WithMany("Answers")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketSystem.Models.Ticket", "Ticket")
                        .WithMany("Answers")
                        .HasForeignKey("TicketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("TicketSystem.Models.Employee", b =>
                {
                    b.HasOne("TicketSystem.Models.JobPosition", "JobPosition")
                        .WithMany("Employees")
                        .HasForeignKey("JobPositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobPosition");
                });

            modelBuilder.Entity("TicketSystem.Models.Problem", b =>
                {
                    b.HasOne("TicketSystem.Models.CasinoGame", "CasinoGame")
                        .WithMany("Problems")
                        .HasForeignKey("CasinoGameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketSystem.Models.Priority", "Priority")
                        .WithMany("Problems")
                        .HasForeignKey("PriorityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CasinoGame");

                    b.Navigation("Priority");
                });

            modelBuilder.Entity("TicketSystem.Models.Ticket", b =>
                {
                    b.HasOne("TicketSystem.Models.CasinoGame", "CasinoGame")
                        .WithMany()
                        .HasForeignKey("CasinoGameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketSystem.Models.Employee", "Engineer")
                        .WithMany("EngineerTickets")
                        .HasForeignKey("EngineerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketSystem.Models.Priority", "Priority")
                        .WithMany("Tickets")
                        .HasForeignKey("PriorityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketSystem.Models.RequestType", "RequestType")
                        .WithMany("Tickets")
                        .HasForeignKey("RequestTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketSystem.Models.Status", "Status")
                        .WithMany("Tickets")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketSystem.Models.Employee", "SupportTech")
                        .WithMany("SupportTechTickets")
                        .HasForeignKey("SupportTechID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CasinoGame");

                    b.Navigation("Engineer");

                    b.Navigation("Priority");

                    b.Navigation("RequestType");

                    b.Navigation("Status");

                    b.Navigation("SupportTech");
                });

            modelBuilder.Entity("TicketSystem.Models.CasinoGame", b =>
                {
                    b.Navigation("Problems");
                });

            modelBuilder.Entity("TicketSystem.Models.Employee", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("EngineerTickets");

                    b.Navigation("SupportTechTickets");
                });

            modelBuilder.Entity("TicketSystem.Models.JobPosition", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("TicketSystem.Models.Priority", b =>
                {
                    b.Navigation("Problems");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TicketSystem.Models.RequestType", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TicketSystem.Models.Status", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TicketSystem.Models.Ticket", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
